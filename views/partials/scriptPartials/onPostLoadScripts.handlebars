<script type="text/javascript">

//this is used to keep track of the oldest post currently loaded in the feed; when the infinite scroll script fetches the next page of posts,
//it should start with posts just older than that. it starts out with the current time as a placeholder (obvs we only want posts older than the current time, we only have posts older than the current time)
needPostsOlderThan = new Date().getTime();

// Globally defining the check height function (should this go somewhere ... else?)
function showMoreAndImageLightboxing(e) {
    var contentCont = $(e.find('.content')[0]);
    if (contentCont.height() > 550 && !contentCont.hasClass('content-warning-post')) {
        var content = contentCont.children();
        content.remove();
        contentCont.append('<div class="abbreviated-content"></div><button type="button" class="button grey-button uppercase-button show-more" data-state="contracted">Show more</button>');
        contentCont.children('.abbreviated-content').append(content);
    }
    var images = contentCont.find('.post-images a');
    if(images.length){
        images.simpleLightbox();
    }
}
$(function(){
{{#if loggedIn}}

    // TRIBUTE-RELATED FUNCTIONALITY (@-MENTIONS)
    // Init tribute
    $.post('/api/user/followers', function (data) {
        followers = JSON.parse(data).followers;
        tribute = new Tribute({
            values: followers,
            menuItemTemplate: function (item) {
                return '<img class="tribute-image" src="' + item.original.image + '"><span class="tribute-text">' + item.string + '</span>';
            },
            searchOpts: {
                pre: '<strong>',
                post: '</strong>'
            }
        })
        tribute.attach($(".ql-editor")); //attach to new post form and comment fields if there are any that aren't handled when their posts are appended (look a few lines down for that)
    });

{{/if}}

    // Attach scripts to newly loaded posts
    $('#postsContainer').on('append.infiniteScroll', function (event, response, path, items) {

        var newlyLoadedStuff = $(items);

        if(this.fadedOut){
            $(this).fadeIn(250);
        }

        newlyLoadedStuff.each(function(i,e){
            e = $(e);
            var imgs = e.children('.content').find('img');
            if(imgs.length){
                var loaded = 0;
                imgs.on('load', function(){
                    loaded++;
                    if(loaded == imgs.length){
                        showMoreAndImageLightboxing(e);
                    }
                })
                imgs.on('error', function(){
                    loaded++;
                    if(loaded == imgs.length){
                        showMoreAndImageLightboxing(e);
                    }
                })
            }else{
                showMoreAndImageLightboxing(e);
            }
        })

        if(newlyLoadedStuff.find('img.link-preview-image').length > 0){
            newlyLoadedStuff.find('img.link-preview-image').on('error',function(){
                $(this).replaceWith('<div class="link-preview-image"><i class="fas fa-link"></i></div>');
            })
        }
    });
});
</script>
